<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.example.oggo.dao.ITeamDao">
  <!-- 동행자구하기 게시판 목록 조회 -->
  <select id="TeamList">
  	SELECT * FROM team_posts ORDER BY created_at DESC
  </select>
  
  <!-- 동행구하기 게시물 작성 -->
  <insert id="regPost">
    INSERT INTO team_posts 
    (post_id, user_id, title, content, product_id, created_at, start_date, end_date, total_members, current_members, status) 
    VALUES 
    (team_seq.NEXTVAL, #{dto.user_id}, #{dto.title}, #{dto.content}, #{dto.product_id}, SYSDATE,  #{dto.start_date}, #{dto.end_date}, #{dto.total_members}, 1, '모집 중')
</insert>

   <!-- 모집 상태 업데이트 -->
   <update id="updateStatus" parameterType="map">
    UPDATE team_posts SET status = #{status} WHERE post_id = #{post_id}
	</update>
   
   <!-- 여행 상품 리스트 조회 -->
	<select id="ProductsList" >
	    SELECT product_id, title FROM travel_products WHERE status = 'AVAILABLE'
	</select>

   <!-- 동행자구하기 상세 조회 -->
	<select id="TeamDetail">
	  SELECT tp.*, p.title AS product_title
	  FROM team_posts tp
	  LEFT JOIN travel_products p ON tp.product_id = p.product_id
	  WHERE tp.post_id = #{post_id}
	</select>
	
	<!-- 게시글 수정 -->
	<update id="updateTeamPost">
	    UPDATE team_posts
	    SET title = #{title},
	        content = #{content},
	        product_id = #{product_id},
	        status = #{status},
	        start_date = #{start_date},
	        end_date = #{end_date},
	        total_members = #{total_members}
	    WHERE post_id = #{post_id}
	</update>
	
	<!-- 동행구하기 게시물 삭제 -->
	<delete id="deleteTeamPost">
		DELETE FROM team_posts
		WHERE post_id = #{post_id}
	</delete>
	
	<!-- 참여 여부 확인 -->
	<select id="hasParticipated" resultType="int">
	    SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
		FROM team_participants
		WHERE post_id = #{post_id} AND user_id = #{user_id}

	</select>
		
	<!-- 참여 기록 추가 -->
	<insert id="addParticipation">
	    INSERT INTO team_participants (id, post_id, user_id, joined_at)
	    VALUES (participants_seq.NEXTVAL, #{post_id}, #{user_id}, SYSDATE)
	</insert>
	
	<!-- 참여 인원 조회 -->
	<select id="currentMembers" parameterType="int" resultType="int">
	    SELECT current_members FROM team_posts WHERE post_id = #{post_id}
	</select>
	
	<!-- 참여 인원 증가 -->
	<update id="increaseMembers" parameterType="int">
	    UPDATE team_posts SET current_members = current_members + 1 WHERE post_id = #{post_id}
	</update>
	  
	<!-- 총 인원 수 -->
	<select id="totalMembers" resultType="int">
    	SELECT total_members FROM team_posts WHERE post_id = #{post_id}
	</select>
	
	<!-- 본인 게시물 참여 -->
	<select id="getWriterByPostId" parameterType="int" resultType="string">
    SELECT user_id
    FROM team_posts
    WHERE post_id = #{post_id}
	</select>
  
  </mapper>